<?xml version="1.0"?>
<robot>
  <gazebo>
    <plugin
        filename="gz-sim-diff-drive-system"
        name="gz::sim::systems::DiffDrive">
        <!-- Topic for the command input -->
        <topic>/cmd_vel</topic>

        <!-- Wheel joints -->
        <left_joint>left_joint</left_joint>
        <right_joint>right_joint</right_joint>

        <!-- Wheel parameters -->
        <wheel_separation>0.23</wheel_separation>        <!-- Adjust for your robot -->
        <wheel_radius>0.06</wheel_radius>                <!-- Adjust for your robot -->

        <!-- Control gains and limits (optional) -->
        <max_velocity>3.0</max_velocity>                <!-- Max linear velocity in m/s -->
        <max_linear_acceleration>1</max_linear_acceleration>
        <min_linear_acceleration>-1</min_linear_acceleration>
        <max_angular_acceleration>2</max_angular_acceleration>
        <min_angular_acceleration>-2</min_angular_acceleration>
        <max_linear_velocity>0.5</max_linear_velocity>
        <min_linear_velocity>-0.5</min_linear_velocity>
        <max_angular_velocity>1</max_angular_velocity>
        <min_angular_velocity>-1</min_angular_velocity>
        
        <!-- Other parameters (optional) -->
        <odom_topic>odom</odom_topic>                  <!-- Odometry topic -->
        <tf_topic>tf</tf_topic>
        <frame_id>odom</frame_id>
        <child_frame_id>base_footprint</child_frame_id>
        <odom_publish_frequency>30</odom_publish_frequency> <!-- from <update_rate>-->

    </plugin>

    <plugin
        filename="gz-sim-joint-state-publisher-system"
        name="gz::sim::systems::JointStatePublisher">
        <topic>joint_states</topic> <!--from <ros><remapping> -->
        <joint_name>left_joint</joint_name>
        <joint_name>right_joint</joint_name>
        <joint_name>front_joint</joint_name>
        <joint_name>back_joint</joint_name>
    </plugin>
  </gazebo>

  <gazebo reference="camera_link">
    <sensor name="camera" type="camera">
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>15</far>
        </clip>
        <noise>
          <type>gaussian</type> 
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
        <optical_frame_id>camera_link</optical_frame_id>
        <camera_info_topic>camera/camera_info</camera_info_topic>
      </camera>
      <always_on>1</always_on>
      <update_rate>20</update_rate>
      <visualize>true</visualize>
      <topic>camera/image</topic>
    </sensor>
  </gazebo>

  <!-- <gazebo reference="camera_link">
      <sensor name="rgbd_camera" type="rgbd_camera">
        <camera>
          <horizontal_fov>1.25</horizontal_fov>
          <image>
            <width>320</width>
            <height>240</height>
          </image>
          <clip>
            <near>0.3</near>
            <far>15</far>
          </clip>
          <optical_frame_id>camera_link</optical_frame_id>
        </camera>
        <always_on>1</always_on>
        <update_rate>20</update_rate>
        <visualize>true</visualize>
        <topic>camera</topic>
        <gz_frame_id>camera_link</gz_frame_id>
    </sensor>
  </gazebo> -->

  <gazebo reference="imu_link">
    <sensor name="imu" type="imu">
      <always_on>1</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <enable_metrics>true</enable_metrics>
      <gz_frame_id>imu_link</gz_frame_id>
    </sensor>
  </gazebo>

  <gazebo reference="navsat_link">
    <sensor name="navsat" type="navsat">
      <always_on>1</always_on>
      <update_rate>1</update_rate>
      <topic>navsat</topic>
      <gz_frame_id>navsat_link</gz_frame_id>
    </sensor>
  </gazebo>

  <gazebo reference="scan_link">
    <sensor name="gpu_lidar" type="gpu_lidar">
      <update_rate>10</update_rate>
      <topic>scan</topic>
      <gz_frame_id>scan_link</gz_frame_id>
      <lidar>
        <scan>
          <horizontal>
            <samples>720</samples>
            <!--(max_angle-min_angle)/samples * resolution -->
            <resolution>1</resolution>
            <min_angle>-3.14156</min_angle>
            <max_angle>3.14156</max_angle>
          </horizontal>
          <!-- Dirty hack for fake lidar detections with ogre 1 rendering in VM -->
          <!-- <vertical>
              <samples>3</samples>
              <min_angle>-0.001</min_angle>
              <max_angle>0.001</max_angle>
          </vertical> -->
        </scan>
        <range>
          <min>0.05</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
        </noise>
        <frame_id>scan_link</frame_id>
      </lidar>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

    <gazebo reference="caster_front">
        <mu1>0.001</mu1>
        <mu2>0.001</mu2>
    </gazebo>

    <gazebo reference="caster_back">
        <mu1>0.001</mu1>
        <mu2>0.001</mu2>
    </gazebo>
  
    <gazebo reference="left_wheel">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
    </gazebo>

    <gazebo reference="right_wheel">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
    </gazebo>

</robot>